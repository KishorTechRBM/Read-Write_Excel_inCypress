describe('Excel File Reading', () => {
    it('should read data from Excel file', () => {
      const filePath = 'cypress/fixtures/PA_Result.xlsx'; // Path relative to the project root
      
      cy.readExcelFile(filePath).then((sheet) => {
        // Define an array of cell references to validate
        const cellsToValidate = ['A1', 'B1', 'C1', 'D1', 'E1', 'F1', 'G1', 'H1', 'I1', 'J1', 'K1', 'L1', 'M1', 'N1', 'O1', 'P1', 'Q1', 'R1', 'S1', 'T1', 'U1', 'V1', 'W1', 'X1', 'Y1', 'Z1', 
                                 'AA1', 'AB1', 'AC1', 'AD1', 'AE1', 'AF1', 'AG1', 'AH1', 'AI1', 'AJ1', 'AK1', 'AL1', 'AM1', 'AN1', 'AO1', 'AP1', 'AQ1', 'AR1', 'AS1', 'AT1', 'AU1', 'AV1', 'AW1', 'AX1', 'AY1', 'AZ1',
                                 'BA1', 'BB1', 'BC1', 'BD1', 'BE1', 'BF1', 'BG1', 'BH1', 'BI1', 'BJ1', 'BK1', 'BL1', 'BM1', 'BN1', 'BO1', 'BP1', 'BQ1', 'BR1', 'BS1', 'BT1', 'BU1', 'BV1', 'BW1', 'BX1', 'BY1', 'BZ1',
                                 'CA1', 'CB1', 'CC1', 'CD1', 'CE1', 'CF1', 'CG1', 'CH1', 'CI1', 'CJ1', 'CK1', 'CL1', 'CM1', 'CN1', 'CO1', 'CP1', 'CQ1', 'CR1', 'CS1', 'CT1', 'CU1', 'CV1', 'CW1', 'CX1', 'CY1', 'CZ1',
                                 'DA1', 'DB1', 'DC1', 'DD1', 'DE1', 'DF1', 'DG1', 'DH1', 'DI1', 'DJ1', 'DK1', 'DL1', 'DM1', 'DN1', 'DO1', 'DP1', 'DQ1', 'DR1', 'DS1', 'DT1', 'DU1', 'DV1', 'DW1', 'DX1', 'DY1', 'DZ1',
                                 'EA1', 'EB1', 'EC1', 'ED1', 'EE1', 'EF1', 'EG1', 'EH1', 'EI1', 'EJ1', 'EK1', 'EL1', 'EM1', 'EN1', 'EO1', 'EP1', 'EQ1', 'ER1', 'ES1', 'ET1', 'EU1', 'EV1', 'EW1', 'EX1', 'EY1', 'EZ1',
                                 'FA1', 'FB1', 'FC1', 'FD1', 'FE1', 'FF1', 'FG1', 'FH1', 'FI1', 'FJ1', 'FK1', 'FL1', 'FM1', 'FN1', 'FO1', 'FP1', 'FQ1', 'FR1', 'FS1', 'FT1', 'FU1', 'FV1', 'FW1', 'FX1', 'FY1', 'FZ1',
                                 'GA1', 'GB1', 'GC1', 'GD1', 'GE1', 'GF1'
                                ];
   
        // Iterate over the cells and perform validations
        for (const cellReff of cellsToValidate) {
          const expectedValue = getExpectedValue(cellReff);
   
          // Example: Asserting the value in the current cell
          expect(sheet[cellReff].v).to.equal(expectedValue);
        }
      });
    });
});

  // Helper function to get expected values based on cell reference
  function getExpectedValue(cellReff) {
    // Implement your logic to get the expected value based on the cell reference
    // For simplicity, return a static value in this example
    switch (cellReff) {
      case 'A1':
        return 'Campaign_Group';
      case 'B1':
        return 'Campaign_Type';
        case 'C1':
        return 'Campaign_ID';
      case 'D1':
        return 'Campaign_Name';
        case 'E1':
        return 'CMI_CD';
      case 'F1':
        return 'CMI_Description';
        case 'G1':
        return 'Mail_Date';
      case 'H1':
        return 'Policy';
        case 'I1':
        return 'POLICY_SEQ_NO';
      case 'J1':
        return 'Master_Policy_No';
        case 'K1':
        return 'InvitationNo';
      case 'L1':
        return 'COMPANY_CD';
        case 'M1':
        return 'SPONSR_CD';
      case 'N1':
        return 'Division_NO';
        case 'O1':
        return 'Sub_Sponsr_CD';
      case 'P1':
        return 'MARKET_CHANNEL_CD';
        case 'Q1':
        return 'MARKET_ENVRMNT_CD';
      case 'R1':
        return 'STATUS_CD';
        case 'S1':
        return 'FREEDOM_POLICY';
      case 'T1':
        return 'POLICY_TYPE';
        case 'U1':
        return 'SaleDt';
      case 'V1':
        return 'Mail2Sale';
        case 'W1':
        return 'Week2Sale';
      case 'X1':
        return 'Month2Sale';
        case 'Y1':
        return 'EffDt';
      case 'Z1':
        return 'NextBillDt';
        case 'AA1':
        return 'PaidtoDt';
      case 'AB1':
        return 'termdt';
        case 'AC1':
        return 'CancelDt';
      case 'AD1':
        return 'LapseDt';
        case 'AE1':
        return 'FAMILY_IN';
      case 'AF1':
        return 'PLAN_CD';
        case 'AG1':
        return 'PLAN_DS';
      case 'AH1':
        return 'PRODUCT_CD';
        case 'AI1':
        return 'PRODUCT_DS';
      case 'AJ1':
        return 'Prod_BaseUp';
        case 'AK1':
        return 'BILL_METHOD_CD';
      case 'AL1':
        return 'BILL_FREQ_CD';
        case 'AM1':
        return 'InsPrem';
      case 'AN1':
        return 'NonIns_Taxable';
        case 'AO1':
        return 'NonIns_NonTaxable';
      case 'AP1':
        return 'tax';
        case 'AQ1':
        return 'NonIns_IncTax';
      case 'AR1':
        return 'NonIns_ExlTax';
        case 'AS1':
        return 'TotPrem';
      case 'AT1':
        return 'TotPrem_ExlTax';
        case 'AU1':
        return 'AARP_InsPrem';
      case 'AV1':
        return 'AARP_NonIns_ExlTax';
        case 'AW1':
        return 'AARP_TotPrem_ExlTax';
      case 'AX1':
        return 'saleMth';
        case 'AY1':
        return 'SaleYr';
      case 'AZ1':
        return 'PH_FIRST_NM';
        case 'BA1':
        return 'PH_MID_INITIAL_TX';
      case 'BB1':
        return 'PH_LAST_NM';
        case 'BC1':
        return 'Mobile_Phone1';
      case 'BD1':
        return 'Mobile_Phone2';
        case 'BE1':
        return 'EMailAddr1';
      case 'BF1':
        return 'EMailAddr2';
        case 'BG1':
        return 'INS_FIRST_NM';
      case 'BH1':
        return 'INS_MID_INITIAL_TX';
        case 'BI1':
        return 'INS_LAST_NM';
      case 'BJ1':
        return 'INS_BIRTHDT';
        case 'BK1':
        return 'Ins_Age_on_SaleDt';
      case 'BL1':
        return 'Ins_Age_on_RptDt';
        case 'BM1':
        return 'INS_ADDRESS1_TX';
      case 'BN1':
        return 'INS_ADDRESS2_TX';
        case 'BO1':
        return 'INS_CITY_NM';
      case 'BP1':
        return 'INS_STATE_CD';
        case 'BQ1':
        return 'INS_ZIP_CD';
      case 'BR1':
        return 'Issue_State';
        case 'BS1':
        return 'INS_AREA_CD';
      case 'BT1':
        return 'INS_PHONE_NO';
        case 'BU1':
        return 'Agency_CD';
      case 'BV1':
        return 'Agent_ID';
        case 'BW1':
        return 'Agent_Name';
      case 'BX1':
        return 'SPOKE_TO_FIRST_NM';
        case 'BY1':
        return 'Initial_FF';
        case 'BZ1':
        return 'Mail_FF_Count';
      case 'CA1':
        return 'EMail_FF_Count';
        case 'CB1':
        return 'Total_FF_Count';
        case 'CC1':
        return 'SaleType';
        case 'CD1':
        return 'BillCount';
        case 'CE1':
        return 'Opened';
        case 'CF1':
        return 'Denied';
        case 'CG1':
        return 'Paid';
        case 'CH1':
        return 'Paid_Amount';
        case 'CI1':
        return 'MonthCount';
        case 'CJ1':
        return 'Sale';
        case 'CK1':
        return 'Persistancy_M1';
        case 'CL1':
        return 'Persistancy_M3';
        case 'CM1':
        return 'Persistancy_M6';
        case 'CN1':
        return 'Persistancy_M9';
        case 'CO1':
        return 'Persistancy_M13';
        case 'CP1':
        return 'Persistancy_M25';
        case 'CQ1':
        return 'Revenue_InsPrem';
        case 'CR1':
        return 'Revenue_Nonins_Taxable';
        case 'CS1':
        return 'Revenue_NonIns_NonTaxable';
        case 'CT1':
        return 'Revenue_NonIns_IncTax';
        case 'CU1':
        return 'Revenue_NonIns_ExlTax';
        case 'CV1':
        return 'Revenue_SalesTax';
        case 'CW1':
        return 'Revenue_TotPrem';
        case 'CX1':
        return 'Revenue_TotPrem_ExlTax';
        case 'CY1':
        return 'Refund_InsPrem';
        case 'CZ1':
        return 'Refund_NonIns_Taxable';
        case 'DA1':
        return 'Refund_NonIns_NonTaxable';
        case 'DB1':
        return 'Refund_NonIns_IncTax';
        case 'DC1':
        return 'Refund_NonIns_ExlTax';
        case 'DD1':
        return 'Refund_SalesTax';
        case 'DE1':
        return 'Refund_TotPrem';
        case 'DF1':
        return 'Refund_TotPrem_ExlTax';
        case 'DG1':
        return 'Revenue2018_4';
        case 'DH1':
        return 'Revenue2018_5';
        case 'DI1':
        return 'Revenue2018_6';
        case 'DJ1':
        return 'Revenue2018_7';
        case 'DK1':
        return 'Revenue2018_8';
        case 'DL1':
        return 'Revenue2018_9';
        case 'DM1':
        return 'Revenue2018_10';
        case 'DN1':
        return 'Revenue2018_11';
        case 'DO1':
        return 'Revenue2018_12';
        case 'DP1':
        return 'Revenue2019_1';
        case 'DQ1':
        return 'Revenue2019_2';
        case 'DR1':
        return 'Revenue2019_3';
        case 'DS1':
        return 'Revenue2019_4';
        case 'DT1':
        return 'Revenue2019_5';
        case 'DU1':
        return 'Revenue2019_6';
        case 'DV1':
        return 'Revenue2019_7';
        case 'DW1':
        return 'Revenue2019_8';
        case 'DX1':
        return 'Revenue2019_9';
        case 'DY1':
        return 'Revenue2019_10';
        case 'DZ1':
        return 'Revenue2019_11';
        case 'EA1':
        return 'Revenue2019_12';
        case 'EB1':
        return 'Revenue2020_1';
        case 'EC1':
        return 'Revenue2020_2';
        case 'ED1':
        return 'Revenue2020_3';
        case 'EE1':
        return 'Revenue2020_4';
        case 'EF1':
        return 'Revenue2020_5';
        case 'EG1':
        return 'Revenue2020_6';
        case 'EH1':
        return 'Revenue2020_7';
        case 'EI1':
        return 'Revenue2020_8';
        case 'EJ1':
        return 'Revenue2020_9';
        case 'EK1':
        return 'Revenue2020_10';
        case 'EL1':
        return 'Revenue2020_11';
        case 'EM1':
        return 'Revenue2020_12';
        case 'EN1':
        return 'Revenue2021_1';
        case 'EO1':
        return 'Revenue2021_2';
        case 'EP1':
        return 'Revenue2021_3';
        case 'EQ1':
        return 'Revenue2021_4';
        case 'ER1':
        return 'Revenue2021_5';
        case 'ES1':
        return 'Revenue2021_6';
        case 'ET1':
        return 'Revenue2021_7';
        case 'EU1':
        return 'Revenue2021_8';
        case 'EV1':
        return 'Revenue2021_9';
        case 'EW1':
        return 'Revenue2021_10';
        case 'EX1':
        return 'Revenue2021_11';
        case 'EY1':
        return 'Revenue2021_12';
        case 'EZ1':
        return 'Revenue2022_1';
        case 'FA1':
        return 'Revenue2022_2';
        case 'FB1':
        return 'Revenue2022_3';
        case 'FC1':
        return 'Revenue2022_4';
        case 'FD1':
        return 'Revenue2022_5';
        case 'FE1':
        return 'Revenue2022_6';
        case 'FF1':
        return 'Revenue2022_7';
        case 'FG1':
        return 'Revenue2022_8';
        case 'FH1':
        return 'Revenue2022_9';
        case 'FI1':
        return 'Revenue2022_10';
        case 'FJ1':
        return 'Revenue2022_11';
        case 'FK1':
        return 'Revenue2022_12';
        case 'FL1':
        return 'Revenue2023_1';
        case 'FM1':
        return 'Revenue2023_2';
        case 'FN1':
        return 'Revenue2023_3';
        case 'FO1':
        return 'Revenue2023_4';
        case 'FP1':
        return 'Revenue2023_5';
        case 'FQ1':
        return 'Revenue2023_6';
        case 'FR1':
        return 'Revenue2023_7';
        case 'FS1':
        return 'Revenue2023_8';
        case 'FT1':
        return 'Revenue2023_9';
        case 'FU1':
        return 'Revenue2023_10';
        case 'FV1':
        return 'Revenue2023_11';
        case 'FW1':
        return 'Revenue2023_12';
        case 'FX1':
        return 'Revenue2024_1';
        case 'FY1':
        return 'Revenue2018';
        case 'FZ1':
        return 'Revenue2019';
        case 'GA1':
        return 'Revenue2020';
        case 'GB1':
        return 'Revenue2021';
        case 'GC1':
        return 'Revenue2022';
        case 'GD1':
        return 'Revenue2023';
        case 'GE1':
        return 'Revenue2024';
        case 'GF1':
        return 'Source'
   
      default:
        return 'DefaultValue';
    }
  }